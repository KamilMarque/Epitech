#!/usr/bin/env python3

import sys
import math
import csv

def print_help():
    print ("Usage\n\t./207demography code [...]\n\tcode1 country code")
    return (0)

def fucntion(val, liste, k):
    i = 0
    with open("207demography_data.csv") as csvfile:
        reader = csv.reader(csvfile, delimiter=';')
        for row in reader:
            if (row[1] == val):
                liste.append(row[1])
                if (k == 0):
                    print("country: ", end = '')
                    print(row[0], end = '')
                if (k > 0):
                    print(", ", end = '')
                    print(row[0], end = '')

def function2(val, liste, check):
    i = 2
    with open("207demography_data.csv") as csvfile:
        reader = csv.reader(csvfile, delimiter=';')
        for row in reader:
            if (row[1] == val):
                while (i <= 52):
                    if (check < 2):
                        liste[i - 2] = float(row[i])
                    else:
                        liste[i - 2] +=  float(row[i])
                    i = i + 1

def country_name(tab, ac):
    country_list = []
    i = 1
    k = 0
    while (i != ac):
        fucntion(tab[i], country_list, k)
        k += 1
        i = i + 1
    print("")
    return (country_list)

def year_list():
    year_list = []
    start = 1961
    end = 2011
    while (start <= end):
        year_list.append(start)
        start = start + 1
    return (year_list)

def pop_list(tab, ac):
    pop_list = [0 for i in range(51)]
    i = 1
    while (i < ac):
        function2(tab[i], pop_list, i)
        i = i + 1
    return (pop_list)

def calc1(pop_list, country_list, year_list):
    x = 0.0
    y = 0.0
    xx = 0.0
    xy = 0.0
    i = 0
    while (i < 51):
        x += year_list[i]
        y += pop_list[i]
        xx += pow(year_list[i], 2)
        xy += year_list[i] * pop_list[i]
        i += 1
    if (((51 * xx) - (x * x)) < 0):
        return (-1)
    else:
        a = (51 * xy - x * y) / (51 * xx - pow(x, 2))
        b = (y * xx - x * xy) / (51 * xx - pow(x, 2))
    print("fit 1")
    print ("\tY = ", end = '')
    print ("%.2f X" % (a / 1000000), end = '')
    if ((b / 1000000) < 0):
        print (" - %.2f" % ((b / 1000000) * -1))
    else:
        print (" + %.2f" % (b / 1000000))

    i = 0
    var = 0
    while (i < 51):
        var += pow(pop_list[i] - (a * year_list[i] + b), 2)
        i += 1
    var = math.sqrt(var / 51);
    print ("\tstandard deviation:\t%.2f" % (var / 1000000))
    print ("\tpopulation in 2050:\t%.2f" % ((a / 1000000) * 2050 + (b / 1000000)))
    final_tab = [a, b, var]
    return (final_tab)

def calc2(pop_list, country_list, year_list):
    x = 0.0
    y = 0.0
    xx = 0.0
    xy = 0.0
    i = 0
    while (i < 51):
        x += pop_list[i]
        y += year_list[i]
        xx += pow(pop_list[i], 2)
        xy += pop_list[i] * year_list[i]
        i += 1
    if (((51 * xx) - (x * x)) < 0):
        return (-1)
    else:
        a = (51 * xy - x * y) / (51 * xx - pow(x, 2))
        b = (y * xx - x * xy) / (51 * xx - pow(x, 2))
    print("fit 2")
    print ("\tX = ", end = '')
    print ("%.2f Y" % (a * 1000000), end = '')
    if (b  < 0):
        print (" - %.2f" % (b) * -1)
    else:
        print (" + %.2f" % (b))

    i = 0
    var = 0
    while (i < 51):
        var += pow(pop_list[i] - ((-(b) + year_list[i]) / a), 2)
        i += 1
    var = math.sqrt(var / 51);
    print ("\tstandard deviation:\t%.2f" % (var / 1000000))
    print ("\tpopulation in 2050:\t%.2f" % (((-(b) + 2050) / a) / 1000000))
    final_tab = [a, b, var]
    return (final_tab)

def final_calc(tab1, tab2, pop_list, year_list):
    i = 0
    c = 0
    while (i < 51):
        c += (pop_list[i] - (tab1[0] * year_list[i] + tab1[1])) * (pop_list[i] - ((-(tab2[1]) + year_list[i]) / tab2[0]))
        i += 1
    c /= 51
    c = c / (tab1[2] * tab2[2])
    print ("correlation: %.4f" % (c))
    return (0)

def check_args(tab, country_list):
    i = len(country_list)
    j = len(tab)
    if (i != j - 1):
        exit (84)

def letsgo(tab, ac):
    pop = pop_list(tab, ac)
    year = year_list()
    country_list = country_name(tab, ac)
    check_args(tab, country_list)
    tab1 = calc1(pop, country_list, year)
    tab2 = calc2(pop, country_list, year)
    final_calc(tab1, tab2, pop, year)

def main():
        ac = len(sys.argv)
        if (ac == 2 and sys.argv[1] == "-h"):
                print_help()
                return (0)
        if (ac == 1):
            print ("Use -h for help")
            return (0)
        letsgo(sys.argv, ac)
        return (0)

if __name__ == "__main__":
    sys.exit(main())
